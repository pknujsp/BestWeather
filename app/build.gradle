plugins {
    id 'com.android.application'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
    // only for Kotlin
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 33
    buildToolsVersion '33.0.1'

    defaultConfig {
        applicationId "com.lifedawn.bestweather"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-rules.pro'
            proguardFile 'proguard-common.pro'
            proguardFile 'proguard-glide.pro'
            proguardFile 'proguard-gson.pro'
            proguardFile 'proguard-retrofit2.pro'
            proguardFile 'proguard-okhttp3.pro'
            proguardFile 'proguard-room.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
        compose = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.0"
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}


dependencies {
    implementation 'androidx.core:core-ktx:+'

    //noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'junit:junit:4.13.2.'

    implementation 'androidx.core:core-splashscreen:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'

    androidTestImplementation 'androidx.test:runner:1.5.1'
    testImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    implementation 'com.google.code.gson:gson:2.9.0'

    ext.room_version = '2.4.3'

    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    kapt("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    implementation 'com.luckycatlabs:SunriseSunsetCalculator:1.2'

    implementation 'com.google.android.gms:play-services-ads:21.4.0'

    implementation 'com.tickaroo.tikxml:annotation:0.8.13'
    implementation 'com.tickaroo.tikxml:core:0.8.15'

    annotationProcessor 'com.tickaroo.tikxml:processor:0.8.13'
    implementation 'com.tickaroo.tikxml:retrofit-converter:0.8.13'
    implementation 'org.jsoup:jsoup:1.15.3'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation "com.facebook.shimmer:shimmer:0.5.0"

    def work_version = "2.7.1"
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")

    def lifecycle_version = "2.5.1"
    def kotlin_version = "1.7.10"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    implementation 'com.airbnb.android:lottie:4.2.2'

    implementation 'com.github.MatteoBattilana:WeatherView:3.0.0'

    implementation project(':nativetemplates')

    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'

    dependencies {
        implementation platform('com.google.firebase:firebase-bom:30.1.0')
        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-analytics'
    }

    implementation 'com.google.android.libraries.places:places:3.0.0'

    implementation 'com.google.android.gms:play-services-maps:18.1.0'

    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore:1.0.0"

    implementation('us.dustinj.timezonemap:timezonemap:4.5') {
        exclude group: 'com.github.luben', module: 'zstd-jni'
    }
    // Import aar for native component compilation
    implementation 'com.github.luben:zstd-jni:1.4.9-5@aar'

    implementation "androidx.concurrent:concurrent-futures:1.1.0"
    // Kotlin
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'

    //Hilt
    implementation 'com.google.dagger:hilt-android:2.44.2'
    kapt 'com.google.dagger:hilt-compiler:2.44.2'

    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'

    def nav_version = "2.5.3"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.5.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

}
repositories {
    mavenCentral()
}

